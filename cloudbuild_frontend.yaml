steps:
  # Step to get backend URL from Terraform output
  - name: 'hashicorp/terraform:latest'
    id: 'load backend url into .env.production'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        terraform init
        echo "REACT_APP_API_URL=$(terraform output -raw nestjs_service_url)\n" >> .env.production

  # Step to get backend URL from Terraform output
  - name: 'hashicorp/terraform:latest'
    id: 'load image bucket url into .env.production'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        terraform init
        echo "IMAGE_BUCKET_URL=$(terraform output -raw frontend_images_bucket_url)\n" >> .env.production

  # Step 1: Install dependencies
  - name: 'gcr.io/cloud-builders/npm'
    id: npm-install
    args: ['install']
    dir: 'cloud-bite-frontend-master'

  # Step 2: Build the React application
  - name: 'gcr.io/cloud-builders/npm'
    id: npm-build
    args: ['run', 'build']
    dir: 'cloud-bite-frontend-master'

  # Step 3: Deploy the build artifacts to the Google Cloud Storage bucket
  - name: 'gcr.io/cloud-builders/gsutil'
    id: gsutil-deploy
    args: ['-m', 'cp', '-r', './build/*', 'gs://cloud-frontend-bucket/']
    dir: 'cloud-bite-frontend-master'

      # Cache invalidation step
  - name: 'gcr.io/cloud-builders/gcloud'
    id: invalidate-cache 
    args: ['compute', 'url-maps', 'invalidate-cdn-cache', 'frontend-url-map', '--path', '/*']